3+5
c(1,3,5)
x
x=1:5
x
x
sample(x,3)
sample(x,3)
sample(x,5)
sample(x,5,replace = TRUE)
sample(x,5,replace = TRUE)
sample(x,10,replace = TRUE)
sample(x,10,replace = TRUE)
y=sample(1:6,12,replace = TRUE)
matrix(y,3,4)
matrix(y,2,6)
x=sample(1:6,3,replace = TRUE)
x
x==6
x==6
x==6
x==6
x
x
x
x
x
x=sample(1:6,3,replace = TRUE)
x
x=sample(1:6,3,replace = TRUE)
x
x=sample(1:6,3,replace = TRUE)
x
x==6
x<6
x=sample(1:6,1000,replace = TRUE)
sum(x==6)
sum(x==6)
x=sample(1:6,1000,replace = TRUE)
sum(x==6)
x=sample(1:6,1000,replace = TRUE)
sum(x==6)
sum(x==6)/1000
x=matrix(sample(1:6,4*10,replace=TRUE),nrow = 4,ncol = 10)
x
y==(x==6)
y=(x==6)
y
z=colSums(y)
z
z>0
sum(z>0)
mean(z>0)
x=matrix(sample(1:6,4*1000,replace = TRUE),nrow = 4,ncol = 1000)
y=(x==6)
z=colSums(y)
sum(z>0)
mean(z>0)
combn(6,4)
dim(x)
x=matrix(sample(1:6,20000,replace = TRUE),2,10000)
y=colSums(x)
mean(y==7)
x=1:5
x
sample(x,3)
sample(x,5)
sample(x,3)
sample(x,3)
sample(x,5)
a<-1
b<-1
c<--1
ls()
(-b+sqrt(b^2-4*a*c))/2*a
(-b-sqrt(b^2-4*a*c))/2*a
ls
ls()
ls()
help("log")
?log
?sqrt
args(log)
log()
data()
sol_1<-(-b+sqrt(b^2-4*a*c))/2*a
sol_2<-(-b-sqrt(b^2-4*a*c))/2*a
sol_1<-(-b+sqrt(b^2-4*a*c))/2*a
sol_2<-(-b-sqrt(b^2-4*a*c))/2*a
ls()
a<-3
b<-2
c<--a
c<--1
sol_1<-(-b+sqrt(b^2-4*a*c))/2*a
sol_2<-(-b-sqrt(b^2-4*a*c))/2*a
class(ls)
library(dslabs)
setwd("~/SparkleShare/My-repository/R")
setwd("~/SparkleShare/My-repository/R")
install.packages("dslabs")
library(dslabs)
data("murders")
class(murders)
data("murders")
class(murders)
str(murders)
head(murders)
murders$population
names(murders)
murders$state
pop<-murders$population
length(pop)
class(pop)
class(murders$state)
z<-3==2
z
class(z)
levels(murders$region)
class(murders$region)
library(dslabs)
data("murders")
data(murders)
str(murders)
names(murders)
murders$state
murders$abb
1:10
seq(1,10)
murders[["population"]]
a <-murders[["population"]]
b <- murders$population
identical(a,b)
murders["population"]
murders$abb
str()
str(region)
str("region")
class(murders$region)
levels(murders$region)
length(murders$region)
levels(length(murders$region))
lenght(levels(murders$region))
length(levels(murders$region))
x<-c("a" "a" "b" "b" "b" "c")
x<-c("a","a","b","b", "b", "c")
table(x)
levels(murders$region)
length(murders$region)
length(levels(murders$region))
murders$region
table(murders$region)
murders$abb
str(murders)
names(murders)
murders$state
murders$abb
a <-murders[["population"]]
b <- murders$population
identical(a,b)
murders["population"]
murders$abb
class(murders$region)
levels(murders$region)
length(murders$region)
levels(length(murders$region))
length(levels(murders$region))
x<-c("a","a","b","b", "b", "c")
table(x)
murders$region
table(murders$region)
#Cargar datos
data("mtcars")
#Cargar datos
data("mtcars")
plot(mtcars$wt,
mtcars$mpg,
main = "Relación entre el peso y el consumo",
xlab = "Peso del coche",
ylab = "Millas por galón",
pch =19)
library(dslabs)
install.packages(dslabs)
install.packages("dslabs")
library(dslabs)
head(murders)
murders$population
names(murders)
pop <- murders$population
length(pop)
class(pop)
class(murders$state)
class(murders$region)
levels(murders$region)
refrescos<-c(25,30,40,20,15,10)
refrescos
df<-data.frame(refrescos)
df
barplot(df$refrescos, main="Consumo", xlab="Meses", ylab="Refrescos", names.arg=c("Abr", "May", "Jun", "Jul", "Agos", "Sept"))
pdf(file="refrescosgraf.pdf")
barplot(df$refrescos, main="Consumo", xlab="Meses", ylab="Refrescos", names.arg=c("Abr", "May", "Jun", "Jul", "Agos", "Sept"))
dev.off()
